// Package gtk was automatically generated by github.com/jwijenbergh/puregotk DO NOT EDIT
package gtk

import (
	"github.com/jwijenbergh/purego"
	"github.com/jwijenbergh/puregotk/internal/core"
	"github.com/jwijenbergh/puregotk/v4/pango"
)

const (
	// Use this priority for functionality related to size allocation.
	//
	// It is used internally by GTK+ to compute the sizes of widgets.
	// This priority is higher than %GDK_PRIORITY_REDRAW to avoid
	// resizing a widget which was just redrawn.
	PRIORITY_RESIZE int = 110
)

var xDisableSetlocale func()

// Prevents [id@gtk_init] and [id@gtk_init_check] from automatically calling
// `setlocale (LC_ALL, "")`.
//
// You would want to use this function if you wanted to set the locale for
// your program to something other than the user’s locale, or if
// you wanted to set different values for different locale categories.
//
// Most programs should not need to call this function.
func DisableSetlocale() {

	xDisableSetlocale()

}

var xGetDefaultLanguage func() *pango.Language

// Returns the `PangoLanguage` for the default language
// currently in effect.
//
// Note that this can change over the life of an
// application.
//
// The default language is derived from the current
// locale. It determines, for example, whether GTK uses
// the right-to-left or left-to-right text direction.
//
// This function is equivalent to
// [func@Pango.Language.get_default].
// See that function for details.
func GetDefaultLanguage() *pango.Language {

	cret := xGetDefaultLanguage()
	return cret
}

var xGetLocaleDirection func() TextDirection

// Get the direction of the current locale. This is the expected
// reading direction for text and UI.
//
// This function depends on the current locale being set with
// setlocale() and will default to setting the %GTK_TEXT_DIR_LTR
// direction otherwise. %GTK_TEXT_DIR_NONE will never be returned.
//
// GTK sets the default text direction according to the locale
// during gtk_init(), and you should normally use
// gtk_widget_get_direction() or gtk_widget_get_default_direction()
// to obtain the current direction.
//
// This function is only needed rare cases when the locale is
// changed after GTK has already been initialized. In this case,
// you can use it to update the default text direction as follows:
//
// |[&lt;!-- language="C" --&gt;
// #include &lt;locale.h&gt;
//
// static void
// update_locale (const char *new_locale)
//
//	{
//	  setlocale (LC_ALL, new_locale);
//	  GtkTextDirection direction = gtk_get_locale_direction ();
//	  gtk_widget_set_default_direction (direction);
//	}
//
// ]|
func GetLocaleDirection() TextDirection {

	cret := xGetLocaleDirection()
	return cret
}

var xInit func()

// Call this function before using any other GTK functions in your GUI
// applications.  It will initialize everything needed to operate the
// toolkit.
//
// If you are using `GtkApplication`, you don't have to call gtk_init()
// or gtk_init_check(); the `GApplication::startup` handler
// does it for you.
//
// This function will terminate your program if it was unable to
// initialize the windowing system for some reason. If you want
// your program to fall back to a textual interface you want to
// call gtk_init_check() instead.
//
// GTK calls `signal (SIGPIPE, SIG_IGN)`
// during initialization, to ignore SIGPIPE signals, since these are
// almost never wanted in graphical applications. If you do need to
// handle SIGPIPE for some reason, reset the handler after gtk_init(),
// but notice that other libraries (e.g. libdbus or gvfs) might do
// similar things.
func Init() {

	xInit()

}

var xInitCheck func() bool

// This function does the same work as gtk_init() with only a single
// change: It does not terminate the program if the windowing system
// can’t be initialized. Instead it returns %FALSE on failure.
//
// This way the application can fall back to some other means of
// communication with the user - for example a curses or command line
// interface.
func InitCheck() bool {

	cret := xInitCheck()
	return cret
}

var xIsInitialized func() bool

// Use this function to check if GTK has been initialized with gtk_init()
// or gtk_init_check().
func IsInitialized() bool {

	cret := xIsInitialized()
	return cret
}

func init() {
	lib, err := purego.Dlopen(core.GetPath("GTK"), purego.RTLD_NOW|purego.RTLD_GLOBAL)
	if err != nil {
		panic(err)
	}

	core.PuregoSafeRegister(&xDisableSetlocale, lib, "gtk_disable_setlocale")
	core.PuregoSafeRegister(&xGetDefaultLanguage, lib, "gtk_get_default_language")
	core.PuregoSafeRegister(&xGetLocaleDirection, lib, "gtk_get_locale_direction")
	core.PuregoSafeRegister(&xInit, lib, "gtk_init")
	core.PuregoSafeRegister(&xInitCheck, lib, "gtk_init_check")
	core.PuregoSafeRegister(&xIsInitialized, lib, "gtk_is_initialized")

}
