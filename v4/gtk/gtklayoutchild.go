// Package gtk was automatically generated by github.com/jwijenbergh/puregotk DO NOT EDIT
package gtk

import (
	"unsafe"

	"github.com/jwijenbergh/purego"
	"github.com/jwijenbergh/puregotk/internal/core"
	"github.com/jwijenbergh/puregotk/v4/gobject"
	"github.com/jwijenbergh/puregotk/v4/gobject/types"
)

type LayoutChildClass struct {
	ParentClass uintptr
}

func (x *LayoutChildClass) GoPointer() uintptr {
	return uintptr(unsafe.Pointer(x))
}

// `GtkLayoutChild` is the base class for objects that are meant to hold
// layout properties.
//
// If a `GtkLayoutManager` has per-child properties, like their packing type,
// or the horizontal and vertical span, or the icon name, then the layout
// manager should use a `GtkLayoutChild` implementation to store those properties.
//
// A `GtkLayoutChild` instance is only ever valid while a widget is part
// of a layout.
type LayoutChild struct {
	gobject.Object
}

var xLayoutChildGLibType func() types.GType

func LayoutChildGLibType() types.GType {
	return xLayoutChildGLibType()
}

func LayoutChildNewFromInternalPtr(ptr uintptr) *LayoutChild {
	cls := &LayoutChild{}
	cls.Ptr = ptr
	return cls
}

var xLayoutChildGetChildWidget func(uintptr) uintptr

// Retrieves the `GtkWidget` associated to the given @layout_child.
func (x *LayoutChild) GetChildWidget() *Widget {
	var cls *Widget

	cret := xLayoutChildGetChildWidget(x.GoPointer())

	if cret == 0 {
		return nil
	}
	gobject.IncreaseRef(cret)
	cls = &Widget{}
	cls.Ptr = cret
	return cls
}

var xLayoutChildGetLayoutManager func(uintptr) uintptr

// Retrieves the `GtkLayoutManager` instance that created the
// given @layout_child.
func (x *LayoutChild) GetLayoutManager() *LayoutManager {
	var cls *LayoutManager

	cret := xLayoutChildGetLayoutManager(x.GoPointer())

	if cret == 0 {
		return nil
	}
	gobject.IncreaseRef(cret)
	cls = &LayoutManager{}
	cls.Ptr = cret
	return cls
}

func (c *LayoutChild) GoPointer() uintptr {
	return c.Ptr
}

func (c *LayoutChild) SetGoPointer(ptr uintptr) {
	c.Ptr = ptr
}

func init() {
	lib, err := purego.Dlopen(core.GetPath("GTK"), purego.RTLD_NOW|purego.RTLD_GLOBAL)
	if err != nil {
		panic(err)
	}

	core.PuregoSafeRegister(&xLayoutChildGLibType, lib, "gtk_layout_child_get_type")

	core.PuregoSafeRegister(&xLayoutChildGetChildWidget, lib, "gtk_layout_child_get_child_widget")
	core.PuregoSafeRegister(&xLayoutChildGetLayoutManager, lib, "gtk_layout_child_get_layout_manager")

}
