// Package gtk was automatically generated by github.com/jwijenbergh/puregotk DO NOT EDIT
package gtk

import (
	"structs"
	"unsafe"

	"github.com/jwijenbergh/purego"
	"github.com/jwijenbergh/puregotk/internal/core"
	"github.com/jwijenbergh/puregotk/v4/glib"
	"github.com/jwijenbergh/puregotk/v4/gobject/types"
)

// User function that is called to determine if the @item should be matched.
//
// If the filter matches the item, this function must return %TRUE. If the
// item should be filtered out, %FALSE must be returned.
type CustomFilterFunc func(uintptr, uintptr) bool

type CustomFilterClass struct {
	_ structs.HostLayout

	ParentClass uintptr
}

func (x *CustomFilterClass) GoPointer() uintptr {
	return uintptr(unsafe.Pointer(x))
}

// `GtkCustomFilter` determines whether to include items with a callback.
type CustomFilter struct {
	Filter
}

var xCustomFilterGLibType func() types.GType

func CustomFilterGLibType() types.GType {
	return xCustomFilterGLibType()
}

func CustomFilterNewFromInternalPtr(ptr uintptr) *CustomFilter {
	cls := &CustomFilter{}
	cls.Ptr = ptr
	return cls
}

var xNewCustomFilter func(uintptr, uintptr, uintptr) uintptr

// Creates a new filter using the given @match_func to filter
// items.
//
// If @match_func is %NULL, the filter matches all items.
//
// If the filter func changes its filtering behavior,
// gtk_filter_changed() needs to be called.
func NewCustomFilter(MatchFuncVar *CustomFilterFunc, UserDataVar uintptr, UserDestroyVar *glib.DestroyNotify) *CustomFilter {
	var cls *CustomFilter

	cret := xNewCustomFilter(glib.NewCallback(MatchFuncVar), UserDataVar, glib.NewCallback(UserDestroyVar))

	if cret == 0 {
		return nil
	}
	cls = &CustomFilter{}
	cls.Ptr = cret
	return cls
}

var xCustomFilterSetFilterFunc func(uintptr, uintptr, uintptr, uintptr)

// Sets the function used for filtering items.
//
// If @match_func is %NULL, the filter matches all items.
//
// If the filter func changes its filtering behavior,
// gtk_filter_changed() needs to be called.
//
// If a previous function was set, its @user_destroy will be
// called now.
func (x *CustomFilter) SetFilterFunc(MatchFuncVar *CustomFilterFunc, UserDataVar uintptr, UserDestroyVar *glib.DestroyNotify) {

	xCustomFilterSetFilterFunc(x.GoPointer(), glib.NewCallback(MatchFuncVar), UserDataVar, glib.NewCallback(UserDestroyVar))

}

func (c *CustomFilter) GoPointer() uintptr {
	return c.Ptr
}

func (c *CustomFilter) SetGoPointer(ptr uintptr) {
	c.Ptr = ptr
}

func init() {
	lib, err := purego.Dlopen(core.GetPath("GTK"), purego.RTLD_NOW|purego.RTLD_GLOBAL)
	if err != nil {
		panic(err)
	}

	core.PuregoSafeRegister(&xCustomFilterGLibType, lib, "gtk_custom_filter_get_type")

	core.PuregoSafeRegister(&xNewCustomFilter, lib, "gtk_custom_filter_new")

	core.PuregoSafeRegister(&xCustomFilterSetFilterFunc, lib, "gtk_custom_filter_set_filter_func")

}
