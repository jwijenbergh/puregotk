// Package gtk was automatically generated by github.com/jwijenbergh/puregotk DO NOT EDIT
package gtk

import "github.com/jwijenbergh/puregotk/v4/gobject/types"

// `GtkStyleProvider` is an interface for style information used by
// `GtkStyleContext`.
//
// See [method@Gtk.StyleContext.add_provider] and
// [func@Gtk.StyleContext.add_provider_for_display] for
// adding `GtkStyleProviders`.
//
// GTK uses the `GtkStyleProvider` implementation for CSS in
// [class@Gtk.CssProvider].
type StyleProvider interface {
	GoPointer() uintptr
	SetGoPointer(uintptr)
}

var xStyleProviderGLibType func() types.GType

func StyleProviderGLibType() types.GType {
	return xStyleProviderGLibType()
}

type StyleProviderBase struct {
	Ptr uintptr
}

func (x *StyleProviderBase) GoPointer() uintptr {
	return x.Ptr
}

func (x *StyleProviderBase) SetGoPointer(ptr uintptr) {
	x.Ptr = ptr
}

const (
	// A priority that can be used when adding a `GtkStyleProvider`
	// for application-specific style information.
	STYLE_PROVIDER_PRIORITY_APPLICATION int = 600
	// The priority used for default style information
	// that is used in the absence of themes.
	//
	// Note that this is not very useful for providing default
	// styling for custom style classes - themes are likely to
	// override styling provided at this priority with
	// catch-all `* {...}` rules.
	STYLE_PROVIDER_PRIORITY_FALLBACK int = 1
	// The priority used for style information provided
	// via `GtkSettings`.
	//
	// This priority is higher than %GTK_STYLE_PROVIDER_PRIORITY_THEME
	// to let settings override themes.
	STYLE_PROVIDER_PRIORITY_SETTINGS int = 400
	// The priority used for style information provided
	// by themes.
	STYLE_PROVIDER_PRIORITY_THEME int = 200
	// The priority used for the style information from
	// `$XDG_CONFIG_HOME/gtk-4.0/gtk.css`.
	//
	// You should not use priorities higher than this, to
	// give the user the last word.
	STYLE_PROVIDER_PRIORITY_USER int = 800
)
