// Package adw was automatically generated by github.com/jwijenbergh/puregotk DO NOT EDIT
package adw

import (
	"unsafe"

	"github.com/jwijenbergh/purego"
	"github.com/jwijenbergh/puregotk/internal/core"
	"github.com/jwijenbergh/puregotk/v4/gdk"
	"github.com/jwijenbergh/puregotk/v4/gobject/types"
)

// An interface for swipeable widgets.
type SwipeableInterface struct {
	Parent uintptr

	Padding [4]uintptr
}

func (x *SwipeableInterface) GoPointer() uintptr {
	return uintptr(unsafe.Pointer(x))
}

// An interface for swipeable widgets.
//
// The `AdwSwipeable` interface is implemented by all swipeable widgets.
//
// See [class@SwipeTracker] for details about implementing it.
type Swipeable interface {
	GoPointer() uintptr
	SetGoPointer(uintptr)
	GetCancelProgress() float64
	GetDistance() float64
	GetProgress() float64
	GetSnapPoints(NSnapPointsVar int) []float64
	GetSwipeArea(NavigationDirectionVar NavigationDirection, IsDragVar bool, RectVar *gdk.Rectangle)
}

var xSwipeableGLibType func() types.GType

func SwipeableGLibType() types.GType {
	return xSwipeableGLibType()
}

type SwipeableBase struct {
	Ptr uintptr
}

func (x *SwipeableBase) GoPointer() uintptr {
	return x.Ptr
}

func (x *SwipeableBase) SetGoPointer(ptr uintptr) {
	x.Ptr = ptr
}

// Gets the progress @self will snap back to after the gesture is canceled.
func (x *SwipeableBase) GetCancelProgress() float64 {

	cret := XAdwSwipeableGetCancelProgress(x.GoPointer())
	return cret
}

// Gets the swipe distance of @self.
//
// This corresponds to how many pixels 1 unit represents.
func (x *SwipeableBase) GetDistance() float64 {

	cret := XAdwSwipeableGetDistance(x.GoPointer())
	return cret
}

// Gets the current progress of @self.
func (x *SwipeableBase) GetProgress() float64 {

	cret := XAdwSwipeableGetProgress(x.GoPointer())
	return cret
}

// Gets the snap points of @self.
//
// Each snap point represents a progress value that is considered acceptable to
// end the swipe on.
func (x *SwipeableBase) GetSnapPoints(NSnapPointsVar int) []float64 {

	cret := XAdwSwipeableGetSnapPoints(x.GoPointer(), NSnapPointsVar)
	return cret
}

// Gets the area @self can start a swipe from for the given direction and
// gesture type.
//
// This can be used to restrict swipes to only be possible from a certain area,
// for example, to only allow edge swipes, or to have a draggable element and
// ignore swipes elsewhere.
//
// If not implemented, the default implementation returns the allocation of
// @self, allowing swipes from anywhere.
func (x *SwipeableBase) GetSwipeArea(NavigationDirectionVar NavigationDirection, IsDragVar bool, RectVar *gdk.Rectangle) {

	XAdwSwipeableGetSwipeArea(x.GoPointer(), NavigationDirectionVar, IsDragVar, RectVar)

}

var XAdwSwipeableGetCancelProgress func(uintptr) float64
var XAdwSwipeableGetDistance func(uintptr) float64
var XAdwSwipeableGetProgress func(uintptr) float64
var XAdwSwipeableGetSnapPoints func(uintptr, int) []float64
var XAdwSwipeableGetSwipeArea func(uintptr, NavigationDirection, bool, *gdk.Rectangle)

func init() {
	lib, err := purego.Dlopen(core.GetPath("ADW"), purego.RTLD_NOW|purego.RTLD_GLOBAL)
	if err != nil {
		panic(err)
	}

	core.PuregoSafeRegister(&xSwipeableGLibType, lib, "adw_swipeable_get_type")

	core.PuregoSafeRegister(&XAdwSwipeableGetCancelProgress, lib, "adw_swipeable_get_cancel_progress")
	core.PuregoSafeRegister(&XAdwSwipeableGetDistance, lib, "adw_swipeable_get_distance")
	core.PuregoSafeRegister(&XAdwSwipeableGetProgress, lib, "adw_swipeable_get_progress")
	core.PuregoSafeRegister(&XAdwSwipeableGetSnapPoints, lib, "adw_swipeable_get_snap_points")
	core.PuregoSafeRegister(&XAdwSwipeableGetSwipeArea, lib, "adw_swipeable_get_swipe_area")

}
