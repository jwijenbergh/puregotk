// Package adw was automatically generated by github.com/jwijenbergh/puregotk DO NOT EDIT
package adw

import (
	"github.com/jwijenbergh/purego"
	"github.com/jwijenbergh/puregotk/internal/core"
	"github.com/jwijenbergh/puregotk/v4/gdk"
	"github.com/jwijenbergh/puregotk/v4/gobject/types"
)

// Describes the available system accent colors.
type AccentColor int

var xAccentColorGLibType func() types.GType

func AccentColorGLibType() types.GType {
	return xAccentColorGLibType()
}

const (

	// Use a blue color (`#3584e4`). This is the default value.
	AccentColorBlueValue AccentColor = 0
	// Use a teal color (`#2190a4`).
	AccentColorTealValue AccentColor = 1
	// Use a green color (`#3a944a`).
	AccentColorGreenValue AccentColor = 2
	// Use a yellow color (`#c88800`).
	AccentColorYellowValue AccentColor = 3
	// Use a orange color (`#ed5b00`).
	AccentColorOrangeValue AccentColor = 4
	// Use a red color (`#e62d42`).
	AccentColorRedValue AccentColor = 5
	// Use a pink color (`#d56199`).
	AccentColorPinkValue AccentColor = 6
	// Use a purple color (`#9141ac`).
	AccentColorPurpleValue AccentColor = 7
	// Use a slate color (`#6f8396`).
	AccentColorSlateValue AccentColor = 8
)

var xAccentColorToRgba func(AccentColor, *gdk.RGBA)

// Converts @self to a `GdkRGBA` representing its background color.
//
// The matching foreground color is white.
func AccentColorToRgba(SelfVar AccentColor, RgbaVar *gdk.RGBA) {

	xAccentColorToRgba(SelfVar, RgbaVar)

}

var xAccentColorToStandaloneRgba func(AccentColor, bool, *gdk.RGBA)

// Converts @self to a `GdkRGBA` representing its standalone color.
//
// It will typically be darker for light background, and lighter for dark
// background, ensuring contrast.
func AccentColorToStandaloneRgba(SelfVar AccentColor, DarkVar bool, RgbaVar *gdk.RGBA) {

	xAccentColorToStandaloneRgba(SelfVar, DarkVar, RgbaVar)

}

var xRgbaToStandalone func(*gdk.RGBA, bool, *gdk.RGBA)

// Adjusts @rgba to be suitable as a standalone color.
//
// It will typically be darker for light background, and lighter for dark
// background, ensuring contrast.
func RgbaToStandalone(RgbaVar *gdk.RGBA, DarkVar bool, StandaloneRgbaVar *gdk.RGBA) {

	xRgbaToStandalone(RgbaVar, DarkVar, StandaloneRgbaVar)

}

func init() {
	lib, err := purego.Dlopen(core.GetPath("ADW"), purego.RTLD_NOW|purego.RTLD_GLOBAL)
	if err != nil {
		panic(err)
	}

	core.PuregoSafeRegister(&xAccentColorGLibType, lib, "adw_accent_color_get_type")

	core.PuregoSafeRegister(&xAccentColorToRgba, lib, "adw_accent_color_to_rgba")
	core.PuregoSafeRegister(&xAccentColorToStandaloneRgba, lib, "adw_accent_color_to_standalone_rgba")
	core.PuregoSafeRegister(&xRgbaToStandalone, lib, "adw_rgba_to_standalone")

}
