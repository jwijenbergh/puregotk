// Package adw was automatically generated by github.com/jwijenbergh/puregotk DO NOT EDIT
package adw

import (
	"structs"
	"unsafe"

	"github.com/jwijenbergh/purego"
	"github.com/jwijenbergh/puregotk/internal/core"
	"github.com/jwijenbergh/puregotk/v4/gobject"
	"github.com/jwijenbergh/puregotk/v4/gobject/types"
	"github.com/jwijenbergh/puregotk/v4/gtk"
)

type LayoutClass struct {
	_ structs.HostLayout

	ParentClass uintptr
}

func (x *LayoutClass) GoPointer() uintptr {
	return uintptr(unsafe.Pointer(x))
}

// An individual layout in [class@MultiLayoutView].
type Layout struct {
	gobject.Object
}

var xLayoutGLibType func() types.GType

func LayoutGLibType() types.GType {
	return xLayoutGLibType()
}

func LayoutNewFromInternalPtr(ptr uintptr) *Layout {
	cls := &Layout{}
	cls.Ptr = ptr
	return cls
}

var xNewLayout func(uintptr) uintptr

// Creates a new `AdwLayout` that contains @content.
func NewLayout(ContentVar *gtk.Widget) *Layout {
	var cls *Layout

	cret := xNewLayout(ContentVar.GoPointer())

	if cret == 0 {
		return nil
	}
	cls = &Layout{}
	cls.Ptr = cret
	return cls
}

var xLayoutGetContent func(uintptr) uintptr

// Gets the content widget.
func (x *Layout) GetContent() *gtk.Widget {
	var cls *gtk.Widget

	cret := xLayoutGetContent(x.GoPointer())

	if cret == 0 {
		return nil
	}
	gobject.IncreaseRef(cret)
	cls = &gtk.Widget{}
	cls.Ptr = cret
	return cls
}

var xLayoutGetName func(uintptr) string

// Gets the name of the layout.
func (x *Layout) GetName() string {

	cret := xLayoutGetName(x.GoPointer())
	return cret
}

var xLayoutSetName func(uintptr, string)

// Sets the name of the layout.
func (x *Layout) SetName(NameVar string) {

	xLayoutSetName(x.GoPointer(), NameVar)

}

func (c *Layout) GoPointer() uintptr {
	return c.Ptr
}

func (c *Layout) SetGoPointer(ptr uintptr) {
	c.Ptr = ptr
}

// Gets the ID of the @buildable object.
//
// `GtkBuilder` sets the name based on the ID attribute
// of the &lt;object&gt; tag used to construct the @buildable.
func (x *Layout) GetBuildableId() string {

	cret := gtk.XGtkBuildableGetBuildableId(x.GoPointer())
	return cret
}

func init() {
	lib, err := purego.Dlopen(core.GetPath("ADW"), purego.RTLD_NOW|purego.RTLD_GLOBAL)
	if err != nil {
		panic(err)
	}

	core.PuregoSafeRegister(&xLayoutGLibType, lib, "adw_layout_get_type")

	core.PuregoSafeRegister(&xNewLayout, lib, "adw_layout_new")

	core.PuregoSafeRegister(&xLayoutGetContent, lib, "adw_layout_get_content")
	core.PuregoSafeRegister(&xLayoutGetName, lib, "adw_layout_get_name")
	core.PuregoSafeRegister(&xLayoutSetName, lib, "adw_layout_set_name")

}
