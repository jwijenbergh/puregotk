// Package gobject was automatically generated by github.com/jwijenbergh/puregotk DO NOT EDIT
package gobject

import "github.com/jwijenbergh/puregotk/v4/gobject/types"

// A function to be called to transform @from_value to @to_value.
//
// If this is the @transform_to function of a binding, then @from_value
// is the @source_property on the @source object, and @to_value is the
// @target_property on the @target object. If this is the
// @transform_from function of a %G_BINDING_BIDIRECTIONAL binding,
// then those roles are reversed.
type BindingTransformFunc func(uintptr, *Value, *Value, uintptr) bool

// Flags to be passed to g_object_bind_property() or
// g_object_bind_property_full().
//
// This enumeration can be extended at later date.
type BindingFlags int

var xBindingFlagsGLibType func() types.GType

func BindingFlagsGLibType() types.GType {
	return xBindingFlagsGLibType()
}

const (

	// The default binding; if the source property
	//   changes, the target property is updated with its value.
	GBindingDefaultValue BindingFlags = 0
	// Bidirectional binding; if either the
	//   property of the source or the property of the target changes,
	//   the other is updated.
	GBindingBidirectionalValue BindingFlags = 1
	// Synchronize the values of the source and
	//   target properties when creating the binding; the direction of
	//   the synchronization is always from the source to the target.
	GBindingSyncCreateValue BindingFlags = 2
	// If the two properties being bound are
	//   booleans, setting one to %TRUE will result in the other being
	//   set to %FALSE and vice versa. This flag will only work for
	//   boolean properties, and cannot be used when passing custom
	//   transformation functions to g_object_bind_property_full().
	GBindingInvertBooleanValue BindingFlags = 4
)
