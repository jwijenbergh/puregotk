// Package gio was automatically generated by github.com/jwijenbergh/puregotk DO NOT EDIT
package gio

import (
	"unsafe"

	"github.com/jwijenbergh/puregotk/v4/gobject/types"
)

// Class structure for #GProxyAddressEnumerator.
type ProxyAddressEnumeratorClass struct {
	ParentClass uintptr
}

func (x *ProxyAddressEnumeratorClass) GoPointer() uintptr {
	return uintptr(unsafe.Pointer(x))
}

type ProxyAddressEnumeratorPrivate struct {
}

func (x *ProxyAddressEnumeratorPrivate) GoPointer() uintptr {
	return uintptr(unsafe.Pointer(x))
}

// #GProxyAddressEnumerator is a wrapper around #GSocketAddressEnumerator which
// takes the #GSocketAddress instances returned by the #GSocketAddressEnumerator
// and wraps them in #GProxyAddress instances, using the given
// #GProxyAddressEnumerator:proxy-resolver.
//
// This enumerator will be returned (for example, by
// g_socket_connectable_enumerate()) as appropriate when a proxy is configured;
// there should be no need to manually wrap a #GSocketAddressEnumerator instance
// with one.
type ProxyAddressEnumerator struct {
	SocketAddressEnumerator
}

var xProxyAddressEnumeratorGLibType func() types.GType

func ProxyAddressEnumeratorGLibType() types.GType {
	return xProxyAddressEnumeratorGLibType()
}

func ProxyAddressEnumeratorNewFromInternalPtr(ptr uintptr) *ProxyAddressEnumerator {
	cls := &ProxyAddressEnumerator{}
	cls.Ptr = ptr
	return cls
}

func (c *ProxyAddressEnumerator) GoPointer() uintptr {
	return c.Ptr
}

func (c *ProxyAddressEnumerator) SetGoPointer(ptr uintptr) {
	c.Ptr = ptr
}
