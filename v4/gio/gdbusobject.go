// Package gio was automatically generated by github.com/jwijenbergh/puregotk DO NOT EDIT
package gio

import (
	"structs"
	"unsafe"

	"github.com/jwijenbergh/purego"
	"github.com/jwijenbergh/puregotk/internal/core"
	"github.com/jwijenbergh/puregotk/v4/glib"
	"github.com/jwijenbergh/puregotk/v4/gobject/types"
)

// Base object type for D-Bus objects.
type DBusObjectIface struct {
	_ structs.HostLayout

	ParentIface uintptr
}

func (x *DBusObjectIface) GoPointer() uintptr {
	return uintptr(unsafe.Pointer(x))
}

// The #GDBusObject type is the base type for D-Bus objects on both
// the service side (see #GDBusObjectSkeleton) and the client side
// (see #GDBusObjectProxy). It is essentially just a container of
// interfaces.
type DBusObject interface {
	GoPointer() uintptr
	SetGoPointer(uintptr)
	GetInterface(InterfaceNameVar string) *DBusInterfaceBase
	GetInterfaces() *glib.List
	GetObjectPath() string
}

var xDBusObjectGLibType func() types.GType

func DBusObjectGLibType() types.GType {
	return xDBusObjectGLibType()
}

type DBusObjectBase struct {
	Ptr uintptr
}

func (x *DBusObjectBase) GoPointer() uintptr {
	return x.Ptr
}

func (x *DBusObjectBase) SetGoPointer(ptr uintptr) {
	x.Ptr = ptr
}

// Gets the D-Bus interface with name @interface_name associated with
// @object, if any.
func (x *DBusObjectBase) GetInterface(InterfaceNameVar string) *DBusInterfaceBase {
	var cls *DBusInterfaceBase

	cret := XGDbusObjectGetInterface(x.GoPointer(), InterfaceNameVar)

	if cret == 0 {
		return nil
	}
	cls = &DBusInterfaceBase{}
	cls.Ptr = cret
	return cls
}

// Gets the D-Bus interfaces associated with @object.
func (x *DBusObjectBase) GetInterfaces() *glib.List {

	cret := XGDbusObjectGetInterfaces(x.GoPointer())
	return cret
}

// Gets the object path for @object.
func (x *DBusObjectBase) GetObjectPath() string {

	cret := XGDbusObjectGetObjectPath(x.GoPointer())
	return cret
}

var XGDbusObjectGetInterface func(uintptr, string) uintptr
var XGDbusObjectGetInterfaces func(uintptr) *glib.List
var XGDbusObjectGetObjectPath func(uintptr) string

func init() {
	lib, err := purego.Dlopen(core.GetPath("GIO"), purego.RTLD_NOW|purego.RTLD_GLOBAL)
	if err != nil {
		panic(err)
	}

	core.PuregoSafeRegister(&xDBusObjectGLibType, lib, "g_dbus_object_get_type")

	core.PuregoSafeRegister(&XGDbusObjectGetInterface, lib, "g_dbus_object_get_interface")
	core.PuregoSafeRegister(&XGDbusObjectGetInterfaces, lib, "g_dbus_object_get_interfaces")
	core.PuregoSafeRegister(&XGDbusObjectGetObjectPath, lib, "g_dbus_object_get_object_path")

}
